Tceacd0a6fd40f7a4df4bce60cc7ecf86	data 46 94	a quadrilateral mesh with n vertices and m edges
T5e71828400c0535d429fdb224ee96fb9	background_claim 96 219	the numerical integration algorithm for constrained dynamics can be developed directly from the augmented Lagrange equation
Td6746bc6a0588c93b4ee31c035e0b775	data 222 234	Marsden 1999
T063af191229d1f695aa78b38d987d56d	background_claim 237 273	L(x, v) = 1 v T Mv −V (x) − C(x) T λ
T86b005553dde2049f6a3421f7c9c54b7	data 444 451	bending
T50aa82f8c31905a3b8b77eceb7b72915	data 453 458	shear
Tac81be6838632d4b5c3f54f5b1cbbb89	own_claim 662 707	The corresponding EulerLagrange equations are
T95158e6705f4b218d85c794e5e401145	own_claim 739 775	M v = −∇V (x) − ∇C(x) T λ , C(x) = 0
Tb4eb18ac324d168e18d5e95d7026ed9f	own_claim 1115 1232	For simulation, we must discretize (3) and (4) in time using one of various schemes, each with benefits and drawbacks
T8d49cb1f0c956570bfc620aa3c3bbcac	own_claim 1234 1331	One may choose differing explicit or implicit schemes for the potential and the constraint forces
Te7567849ef90f2d8155fdcf2f537b6a3	own_claim 1344 1400	potential forces are split and separately discretized in
Ted4293420158ec4e0df000998350cd98	data 1402 1420	Ascher et al. 1997
T70d6a06d2ec3ff5db1d0876fc9f11e45	background_claim 1642 1757	One widely-used family of discretizations includes SHAKE and RATTLE, which extend the (unconstrained) Verlet scheme
Te8e1b43d76dab5f737eecb6b1f3a7b59	data 1760 1778	Hairer et al. 2002
Ta2860bc0bab93c2978e14c0150a1fccb	background_claim 1780 1878	by considering a constraint force direction, −∇C(x) T , evaluated at the beginning of the timestep
Tdc2aa284a560cf22c36b79c6251d5947	background_claim 1895 1992	enforcing length-preserving constraints with SHAKE fails for four common geometric configurations
T07ffb5e7af7e2588f065b331447a7d53	data 2039 2047	Figure 2
T81c7944cd3b43e4ee93bc07ba6ec16d4	own_claim 2050 2084	This figure is a reproduction from
T74b5e6d6fd692e920884034fc02412ee	data 2086 2103	Barth et al. 1994
Tfccef4781573e4675f240b17b2b937d1	background_claim 2107 2147	which discusses these drawbacks in SHAKE
Tc5522a52b386052ade0ba4a1bdbdfccf	background_claim 2152 2177	does not offer a solution
T357b194d31d11faca16486e3e4a2c8da	data 2312 2339	no constraints were applied
T58efa53399979a66b5f302fcfa9a6527	data 2344 2378	the constraint direction, −∇C(x) T
Td32586fc37586849fb4f3ff05abdf1a8	data 2381 2431	is evaluated at the beginning of the timestep, x n
T304ff59cc5acc7843531d921df410bd7	data 2437 2445	in SHAKE
T26618bc22295d6a38a99367eb9f27248	background_claim 2452 2556	no scaling, λ , of the constraint direction yields a satisfied end-of-timestep constraint, C(x n+1 ) = 0
T12a4c151e36dbec1b9ba4a33fa0daaab	background_claim 2585 2653	this observation manifests as a singular Jacobian in Newton’s method
T91ab345ddc1158487bbc55c6b63cd313	own_claim 2655 2728	These four cases correspond to rapid change in edge length or orientation
T52438723b3a59adb9a09543a97e03dd8	background_claim 2743 2759	they occur often
T02fd884a58e5d1fda905c5d536936b61	data 2925 2942	Barth et al. 1994
T8824132b3e6585f2f38002aee4244d3c	own_claim 3160 3193	this resolves (Q1), (Q2) and (Q4)
Tc33db21d9e1fb0f405a988b96db40255	own_claim 3195 3207	(Q3) remains
T8a3c01efe0337a758c710da621ad1a4e	own_claim 3213 3265	is automatically remedied by decreasing the timestep
Tb7663ecd9205e0389a91a468bb4345b1	own_claim 3339 3428	v n+1 = v n − hM −1 ∇V (x n ) + ∇C(x n+1 ) T λ n+1 , x n+1 = x n + hv n+1 , C(x n+1 ) = 0
T4ba1e1aa2e00d6266045fb29e1ea04a2	own_claim 4056 4080	F measures the deviation
Te7ac34927e69aad71c70b16a928ee252	own_claim 4259 4346	it states that the correction of the unconstrained step is due to the constraint forces
T4ee6ab12b555ae8bbe4c8ba889a2ef45	own_claim 4553 4586	Solving for an ICD step is costly
T938b25f263ec0bdfa6bedab30f54162f	data 4596 4619	there are many unknowns
T9e66e43e8ef035d892c81e18d33bcb29	own_claim 4632 4737	each Newton step requires the solution of an indefinite linear system, whose matrix is costly to assemble
T8c3d2f9c082d95bb7ac88fb2ed85523c	own_claim 4748 4867	we develop an approximation to ICD that addresses these drawbacks without sacrificing constraint accuracy or robustness
Tca8c2eced71edbd6c210bc9d1c85c7a7	background_claim 5335 5396	Methods of this form are known as manifold-projection methods
Te24a5ed38706141f36293a0593bca047	data 5399 5417	Hairer et al. 2002
T32c16035b45b365b3b844a6e7ea8658a	own_claim 5420 5485	To define a specific method, we must choose a projection operator
T345647d8b11b6ea959c37675dfd70e25	own_claim 7118 7195	To solve SAP, one might extremize W ( δ x n+1 , λ n+1 ) using Newton’s method
T8167aa3129f9f7c4b3ad09d753b34720	own_claim 7197 7320	each iteration would improve upon a guess for the shortest step, δ x n+1 that projects x n+1 0 onto the constraint manifold
T5c4d1ca8b3dce6f5be8c6bc2dcab805a	own_claim 7398 7521	It combines the robustness of using an implicit constraint direction with the efficiency of approximate manifold projection
T1b42843a95c0bb7914c0bae06fee8ba5	own_claim 7926 7959	it relaxes the requirement of SAP
T25ae319baf6ce5c8dfe441662986f917	own_claim 9052 9160;9169 9227	we obtain a quadratic objective function, whose stationary equations with respect to δ x j+1 and δ λ j+1 are C(x j+1 ) = C(x j + δ x j+1 ) ≈ C(x j ) + ∇C(x j ) δ x j+1
Tf23fb2e28d21adaa61878f659f451d4e	own_claim 9261 9299	δ x j+1 = −h 2 M −1 ∇C(x j ) T δ λ j+1
T21770b4608d82c02dc16aaa2854e7f83	own_claim 9342 9369	∇C(x j ) δ x j+1 = −C(x j )
T62dc18a802377c4b15a76cd2071ddb45	own_claim 9416 9473	we eliminate δ x j+1 and solve a linear system in δ λ j+1
Tf5fcef0aa6065c2e36583eae9fc77a07	own_claim 9507 9552	h 2 ∇C(x j )M −1 ∇C(x j ) T δ λ j+1 = C(x j )
T6d3a58d144ac9194791c047739eaa250	data 9578 9616	the linear system matrix involves M −1
T38e2dc5c9e141955cc899aa1e7ac3aa3	own_claim 9619 9677	the assembly of this system is most efficient for diagonal
T3540e1353ea8674d2aecb0943a9c3128	own_claim 9797 9843	a fast projection step requires a linear solve
T90635534fddf0ddb56593ad4c5dbfe18	own_claim 9854 9878	fast projection’s system
Tee04e92b3b6f4a6f3fc571088ff34553	own_claim 9885 9948	is smaller (≈ 2n × 2n compared to ≈ 5n × 5n), positive definite
Tfa3699aacda934a19c06b4f15f845778	own_claim 9999 10087	it is considerably cheaper to evaluate, assemble, and solve than its ICD/SAP counterpart
T27748b25d245ce40cef25e7b8d3e2dc4	own_claim 10309 10424	Fast projection finds a manifold point, x n+1 , that is close, but not closest, to the unconstrained point, x 0 n+1
Tc4b9cd2ffe51ba652fbdb7292f53704a	own_claim 10472 10508	fast projection exactly solves C = 0
T04cd6461105bc3b0aa468307e70003a2	own_claim 10515 10536	it approximates F = 0
T3c968675915702ed5cc9f39cf99b6526	own_claim 10538 10618	One important question is whether the fast projection’s error in F is acceptable
T5a91946879e4d5468bed7307c4b5152d	own_claim 10713 10762	The first iteration of these methods is identical
Tfae961f78333b063942b0dabc3e173f6	own_claim 10764 10814	At the end of this first iteration, F, C ∈ O(h 2 )
Tb4517a135f9c98cd2c27b5a7bdeca652	own_claim 10816 10864	Additional fast projection iterations seek C → 0
T713ff531a1e226013be7a0af25ebe556	data 10876 10887	C ∈ O(h 2 )
Tc8530aeb452948433fe7b59a0e502a54	own_claim 10889 10916	increments in x are O(h 2 )
Tf314af18d19e22c13728e5b5f0c48cd2	own_claim 10928 10948	F remains in O(h 2 )
T5b8c0558397fb3102d036878f44beb39	own_claim 10963 11016	F ∈ O(h 2 ) is considered acceptable in many contexts
T5bf9827582b68bb7be07d6eeadbfd176	data 11025 11047	Baraff and Witkin 1998
T530404322afd109a0f695634b97dd4b6	data 11049 11065	Choi and Ko 2002
T00b90779873f8fce72454f315bc230b1	background_claim 11067 11115	halt the Newton process after a single iteration
Tcc64088ec0b04a3f47ebb8f0b9085ecc	data 11207 11215	Figure 3
T71777673bbe85b327e8fdba321a4f56b	own_claim 11218 11296	the first iteration of the fast projection method eliminates first-order error
T9e17ea62194c27a5ede1367d127b1386	own_claim 12387 12505	We implement fast projection as a velocity filter, enabling easy integration into our existing cloth simulation system
T3daddab3c9c1500dc98f981c1ed182a7	own_claim 12529 12603	Step 3 requires solving a sparse symmetric positive definite linear system
Tc588a61de2256eabdf9b337795919058	own_claim 12605 12623	we use the PARDISO

