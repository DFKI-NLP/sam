T658a9aacf0a4d0798e0c05ab5986b3c4	own_claim 45 188	The choice of the adequate integration method has to be carried out using various considerations related to the kind of problem to be simulated
Te6db87de8dc1b7a178e02d9bf5f2ae8f	background_claim 190 227	Among those considerations, there are
T4868befdfff64e3220d0039be0075280	background_claim 231 336	The size of the problem, mostly related to the number of particles used to describe the mechanical system
Ta9ad237beb2eb239b977da698ecae011	background_claim 340 505	The desired accuracy, which reflects the allowable numerical tolerance between the computed solution and the theoretical evolution expected from the mechanical model
T70b801e0b08cbe47b198bb3a09cb33f4	background_claim 509 661	The simulation context, which can either be an extensive computation of the motion along time requiring accurate evaluation of all the dynamical factors
T4bb6576cefa8ffac42198fbdf92bc16a	background_claim 666 778	a simple relaxation process where the simulation has to converge to the static rest state as quickly as possible
T891baf8236e2a3a5ed114a1d58e56cd9	background_claim 782 1010	The stiffness of the problem, mainly related to the rigidity of the particle interactions and the size of the chosen time step, which translated into the “difficulty” the numerical method has to compute the evolution numerically
Tb44dc3ac8170b47829409b99628658ea	background_claim 1016 1076	which practically causes inaccuracy and instability problems
T6ec5b8802b419773765f22897fe1bcd4	background_claim 1080 1160	The time an iteration takes to compute, and the number of mechanical derivations
T899b79968d506eecb9cb5b5a0760c4bd	background_claim 1162 1222	computation of particle forces from their position and speed
T25d20c24872ce72c61c13f9862d69900	background_claim 1224 1259	the methods requires to compute one
Tb1f3758f89120aea1938d9d028e4e1ea	background_claim 1261 1402	The literature is abundant about various integration methods which aim to solve linear systems of first-order ordinary differential equations
T3751cc9ca28e38e832c80d1d320b7f8d	data 1406 1412	PRE 92
T479a90320b909dba1b5842e62f015caf	background_claim 1416 1626	One can easily turn the second-order systems relating dynamical mechanical systems into first-order systems by constructing a state vector defined by the concatenation of position and speed states of the system
T7532b4e8859ad745f4f5d8d6fa9ea598	background_claim 1636 1686	to fit the requirements of any of these algorithms
T6bdd4a0bd16c2afd5eee49b2149e7107	background_claim 1688 1757	Among all the available methods, we can identify several main classes
Tdab18a74137840910a5cc31a1dc788f3	background_claim 1761 1906	Explicit methods, which compute the state of the next time step out of a direct extrapolation of the previous states using derivative evaluations
T8c5f91e63bc23995b08d574b171813cb	background_claim 1910 2059	Implicit methods, which deduce the state of the next time step from an equation system expressing some “reversibility” from the extrapolated solution
Td6d51b8d4f98023347cb78a7f2987370	background_claim 2063 2169	Low-order methods, which use a reduced number of evaluations for computing simple low-order extrapolations
Ta5c00a4d26fb59b1241e725d148318df	background_claim 2171 2225	leading to quickly computed, but inaccurate iterations
T4c40b1a6ee08f61ba374ca589d28c194	background_claim 2229 2366	High-order methods, which use several evaluations to compute high-order solutions that get much more accurate as the time step is reduced
T19f067b541c813ff39c34e93dd4250d5	own_claim 2533 2770	which seem to fit the best the requirements set for cloth simulation problems, in terms of implementation simplicity and efficiency for particle systems using large numbers of particles that interact sparsely and with a constant topology
Tbb323283397807e3db666e7ae8b389f6	own_claim 2829 2902	The explicit Midpoint method, which is a simple low-order explicit method
T8c81ff65473d21fe1996fea72d0430cf	own_claim 2904 3027	It requires two mechanical derivations per iteration and returns a second-order accurate solution relative to the time step
T8c6d4bd07f862e9a2c62e7912f9673b3	own_claim 3029 3078	It also requires two storages of the state vector
T7632c0d356f637b011d7b3f74a0e78cc	own_claim 3080 3150	We preferred this method to the still simpler first-order Euler method
T9af711f90ec6289e96e4d16454e6bd5e	own_claim 3163 3206	the obvious gains of accuracy and stability
T4317be13770d34c3746efe08c7f359d7	own_claim 3222 3258	the additional mechanical evaluation
Te7a5c1a90ce29327c25b7e8bf962ce96	own_claim 3260 3291	makes it largely more efficient
T78740b6c8f61ea3005456bea7dc07e4b	own_claim 3293 3342	We implemented this method for garment simulation
T6a3373b527394f4c91963c10aabf15ed	data 3349 3355	VOL 95
T5610178aa74b22ccc672826edb0132f8	own_claim 3361 3454	The explicit Runge-Kutta method, implemented in its fifth-order version with error evaluation
T86a7e89ae58440f89200dc81ef0997a0	data 3458 3464	PRE 92
T8d2b35a390e265e13a27717da05bc2c1	background_claim 3468 3567	It requires five mechanical derivations per iteration, as well as five storages of the state vector
T6e777d70ca8767421e11cb9dd8ae3a9c	own_claim 3569 3676	This method is supposed to provide high accuracy, which increases significantly as the time step is reduced
Tfe0c5be2f562b358c4af57f5f359f908	background_claim 3678 3709	This method was experimented in
Tc7d9845ab2cbc7475390c54eabfc84de	data 3712 3718	EBE 96
T921e50dadc7b1c1012f6da3a8837b1ed	data 3727 3733	VOL 97
T0f58a927cb624bd9fb40f92cc4fc8869	background_claim 3739 3836	The Backward Euler method, which is the implicit implementation of its simple forward counterpart
Teb6181e538cdb4b0a6389ab6fc739e9f	background_claim 3838 4045	It requires one mechanical evaluation and the resolution of a sparse linear system per iteration, as well as one storage of the system state additionally to those required for the system resolution algorithm
T32a209b0a9c6cf0b0fe2fdc287625855	background_claim 4047 4147	This method is supposed to provide approximate results that are not subject to numerical instability
Ta91345a886a02c5c1cd0c34074b00ffa	data 4151 4177	the time step is increased
T89ce48d15d04fc7d3023c1dce1b75e34	own_claim 4179 4306	We implemented this method combined with a Conjugate Gradient algorithm using linear system matrix products computed on the fly
T2db584f1bd900e7d52e96607bd35317f	data 4327 4333	VOL 00
T97d00b7b369798b08a622139a277d7e6	own_claim 4346 4429	able to take into account the anisotropy and nonlinearities of the mechanical model
Tc13d03df466798993fe5b054b13c77af	own_claim 4433 4514	the actual Hessian matric is used for each current state of the mechanical system
Tb84a059b330f621d3aa894952b875633	background_claim 4516 4551	No initial matrix setup is required
Tad20919b2956fbca2503dd1f17f16a5f	background_claim 4565 4624	also the need of separating linear and nonlinear components
T2840605c205a9092d8a35ff551d250fd	data 4643 4649	EBE 00
T759a8611d56e5de61ead1a227dfc6651	own_claim 4653 4801	We have also carried out some preliminary tests with the Rosenbrook method, which is an implicit implementation of a fourth-order Runge-Kutta method
T32d3b9e7d14546a39a48082fcb77d317	own_claim 4803 4902	It is supposed to combine the stability of implicit methods with the accuracy of high-order methods
T955c6158bf79925c60407d761ecedf1b	own_claim 4904 4960	We implemented this method using the algorithm described
T1b538a4eede53693939da05e6cb4e24a	data 4967 4973	PRE 92
Tcc05057857a8213cb47c053db412d620	own_claim 4982 5039	preliminary experiments have shown very deceptive results
T460d45355d970f8b239302ac7ab76e84	own_claim 5045 5135	the gain of accuracy did not compensate the large calculations required for each iteration
T713ab89c3ee0e0053fba83b1b86d80d6	own_claim 5145 5266	increased instability problems did not allow time steps much larger than those used for good accuracy with backward Euler
T98e90e859ac747f04ea501a5403b52bc	own_claim 5268 5426	We did not consider in our tests the methods aimed toward simplifications which might highly approximate and degrade the dynamic behavior of deformable models
Tb0d23f98126efef15af652f5618bae8f	background_claim 5436 5490	implicit integration with precomputed inverse matrices
T6594d96348cc774d29809bb9b8e0e6dd	data 5493 5499	DES 99
T31212ef43f789930803eda3dfbb0e5b7	background_claim 5503 5577	which involves high simplification and linrarization of the Hessian matrix
T5c43d5accba19d23822d322bc2506574	background_claim 5582 5640	which also becomes very unpractical for large matrix sizes
Tf5479bdc7dead18accaef05aa2d02695	background_claim 5642 5698	the inverse of a sparse matrix is not necessarily sparse
T9a5dd1dde25e5d447edcd0620780c7f1	own_claim 5701 5801	We simulated such algorithm using accurate resolution on an accordingly approximated constant matrix
T37d985c70b1c086d448c6eb5e8833608	own_claim 5821 5873	these approximations produced more simulation errors
T95d3fe9419ec3dc7185d63722785ad67	own_claim 5875 5938	on dynamic behavior of wrinkles and motion damping particularly
T6200b8b7689f896b2757609cc2e10815	own_claim 5940 6075	than producing a quick and rough linear system solution using a reduced number of Conjugate Gradient iterations with an accurate matrix
T4b3fead47abce62fde8f50c9bddb7876	background_claim 6077 6110	Even more drastic simplifications
T3a6fa6709e91d504e2805f10e93a4ba2	data 6113 6119	KAN 00
T28dd7f93b45547ce73d8a9aa32b06211	own_claim 6122 6169	reduce the matrices to their diagonal component
T26b996839641fa245d957892f4a0bf49	own_claim 6230 6389	All these methods were implemented in a single framework, which allows the simulation of cloth objects, using two different discrete mechanical representations
T42141d87d954e9acd8076a267f59f0f9	own_claim 6391 6482	* A complete surface elasticity model which allows the simulation of anisotropic elasticity
T4b2e121256a9b7d0be1e6a65c88d8a49	own_claim 6544 6568	and associated viscosity
T4ff25044e165b10c79720e7fab749094	own_claim 6570 6597	Bending is also implemented
T85a98ddd905b2f384d9da6c372871642	own_claim 6641 6725	The base element of this simulation is a triangle of the mesh describing the surface
T6413ca21ef5255991349d8b168494ebe	own_claim 6731 6872	the elasticity laws are computed as interactions between the three vertices of a triangle reflecting all the mechanical behavior curves which
T9481c003f160d0e6b1d54e9ad5902bad	own_claim 6890 6917	are restricted to be linear
Tf135eed51c71318190e22ef9815fa4d7	own_claim 6919 7119	* A simplified spring-mass model which represents an approximated equivalent elasticity model using linear viscoelastic springs connecting the particle couples describing each edge of the surface mesh
Tea63d8cc98922826a2fc3518f19b8f8e	own_claim 7121 7200	This model is one of the simplest that a cloth simulation application would use
T399fcc65bbade623cd396034549e29bc	own_claim 7202 7267	The implementation also supports collision detection and response
Tbab6529b009d71e89cb2ecaa4cb0d037	own_claim 7306 7484	An object-oriented framework written in C++ integrate all these technologies into a single application allowing simulation of cloth objects of any shape with specified parameters
R7185f4480391f78f9cd13a2dee12e7ab	supports Arg1:T4868befdfff64e3220d0039be0075280 Arg2:Te6db87de8dc1b7a178e02d9bf5f2ae8f
R6e98d36f97dd0773916f0c57de11f65e	supports Arg1:Ta9ad237beb2eb239b977da698ecae011 Arg2:Te6db87de8dc1b7a178e02d9bf5f2ae8f
R2e4bc944087a9273957a21cb5b52c9d1	supports Arg1:T891baf8236e2a3a5ed114a1d58e56cd9 Arg2:Tb44dc3ac8170b47829409b99628658ea
Rb809a4418e66fa1df452acd66cc780e2	supports Arg1:T899b79968d506eecb9cb5b5a0760c4bd Arg2:T6ec5b8802b419773765f22897fe1bcd4
Ra34f3aee7805e96a6c7f3853e70313b9	supports Arg1:T25d20c24872ce72c61c13f9862d69900 Arg2:T6ec5b8802b419773765f22897fe1bcd4
R7729b13c60397d0e037629daffc4c2c4	supports Arg1:T899b79968d506eecb9cb5b5a0760c4bd Arg2:T25d20c24872ce72c61c13f9862d69900
R16ce3de13faa58033b24b3905b1f57e7	supports Arg1:T3751cc9ca28e38e832c80d1d320b7f8d Arg2:Tb1f3758f89120aea1938d9d028e4e1ea
R984768b91c62883384a582c02ad421d2	supports Arg1:T479a90320b909dba1b5842e62f015caf Arg2:T7532b4e8859ad745f4f5d8d6fa9ea598
R4f0c1abc25b7f5b49366a2fa832ecff4	supports Arg1:Tdab18a74137840910a5cc31a1dc788f3 Arg2:T6bdd4a0bd16c2afd5eee49b2149e7107
R3b180a756286bbf829308fb0b9eea710	supports Arg1:T8c5f91e63bc23995b08d574b171813cb Arg2:T6bdd4a0bd16c2afd5eee49b2149e7107
Rc29100708e246cb7e9c900852f549aa4	supports Arg1:Td6d51b8d4f98023347cb78a7f2987370 Arg2:Ta5c00a4d26fb59b1241e725d148318df
Rf7fc571d90768dc1fc3224eaf93d8620	supports Arg1:T4c40b1a6ee08f61ba374ca589d28c194 Arg2:T6bdd4a0bd16c2afd5eee49b2149e7107
R7204eb96a52d471a39306d68eff99a43	supports Arg1:T9af711f90ec6289e96e4d16454e6bd5e Arg2:T7632c0d356f637b011d7b3f74a0e78cc
R16708c2f86321667455f2953ae68e417	supports Arg1:T9af711f90ec6289e96e4d16454e6bd5e Arg2:T4317be13770d34c3746efe08c7f359d7
R6e4a47b580c3f2133c0bc026b4e17215	supports Arg1:T4317be13770d34c3746efe08c7f359d7 Arg2:Te7a5c1a90ce29327c25b7e8bf962ce96
Rdf911fc36f5efcc922e8407f52d40437	supports Arg1:T9af711f90ec6289e96e4d16454e6bd5e Arg2:Te7a5c1a90ce29327c25b7e8bf962ce96
Rf677c9141f82821e416e5678422fea11	supports Arg1:T6a3373b527394f4c91963c10aabf15ed Arg2:T78740b6c8f61ea3005456bea7dc07e4b
R8daf8134b694edf0ff5d1af085370da4	supports Arg1:T86a7e89ae58440f89200dc81ef0997a0 Arg2:T5610178aa74b22ccc672826edb0132f8
R217efd9f3f4f2bbad4596c5af1618c95	supports Arg1:Tc7d9845ab2cbc7475390c54eabfc84de Arg2:Tfe0c5be2f562b358c4af57f5f359f908
Reb9ac100581c3595dad11dc747dc5b01	supports Arg1:T921e50dadc7b1c1012f6da3a8837b1ed Arg2:Tfe0c5be2f562b358c4af57f5f359f908
R767fd3eeb829fd4de21160a148dd193b	supports Arg1:Ta91345a886a02c5c1cd0c34074b00ffa Arg2:T32a209b0a9c6cf0b0fe2fdc287625855
R470df147cd8ff3e9b47c1d07968fee9d	supports Arg1:T2db584f1bd900e7d52e96607bd35317f Arg2:T89ce48d15d04fc7d3023c1dce1b75e34
R683156d1bbaf212f4864e4a206ded0ff	supports Arg1:T89ce48d15d04fc7d3023c1dce1b75e34 Arg2:T97d00b7b369798b08a622139a277d7e6
R27f345269c690d90645bcba38b7f6b43	supports Arg1:Tc13d03df466798993fe5b054b13c77af Arg2:T97d00b7b369798b08a622139a277d7e6
R39987e18f55c18bbc307cea1ff47f2cc	contradicts Arg1:Tb84a059b330f621d3aa894952b875633 Arg2:Tad20919b2956fbca2503dd1f17f16a5f
Re014ef23e7d32b0388c7cd08d13c2148	parts_of_same Arg1:Tb84a059b330f621d3aa894952b875633 Arg2:Tad20919b2956fbca2503dd1f17f16a5f
R9bf524deab0375a74e1b987f6cab6dc2	supports Arg1:T2840605c205a9092d8a35ff551d250fd Arg2:Tad20919b2956fbca2503dd1f17f16a5f
Rad0d22a9398a79e752f76ba1e7ad68f0	supports Arg1:T1b538a4eede53693939da05e6cb4e24a Arg2:T955c6158bf79925c60407d761ecedf1b
R58f492f97f2c418238ef1fe53419b9dc	contradicts Arg1:T955c6158bf79925c60407d761ecedf1b Arg2:Tcc05057857a8213cb47c053db412d620
R53be7e3ba1fd81e97538b8e98e12e510	contradicts Arg1:T460d45355d970f8b239302ac7ab76e84 Arg2:T713ab89c3ee0e0053fba83b1b86d80d6
R5e1c1b15b00d7e64f5dc957e339055e1	supports Arg1:Tb0d23f98126efef15af652f5618bae8f Arg2:T98e90e859ac747f04ea501a5403b52bc
R76e3a9b59c167b7c90f9af38e042b8e2	supports Arg1:T6594d96348cc774d29809bb9b8e0e6dd Arg2:Tb0d23f98126efef15af652f5618bae8f
R9e7a835911a5217327ace60d5881115c	parts_of_same Arg1:Tb0d23f98126efef15af652f5618bae8f Arg2:T31212ef43f789930803eda3dfbb0e5b7
R741d5062a219bb52de24ce9c91870f53	supports Arg1:T6594d96348cc774d29809bb9b8e0e6dd Arg2:T31212ef43f789930803eda3dfbb0e5b7
R039c3dbdc15fd356b610e8b0a652f911	supports Arg1:Tf5479bdc7dead18accaef05aa2d02695 Arg2:T5c43d5accba19d23822d322bc2506574
R1114f89d2c7891d0da9c1216808e3181	supports Arg1:T9a5dd1dde25e5d447edcd0620780c7f1 Arg2:T37d985c70b1c086d448c6eb5e8833608
R942224b4a22b0493aa6600d23006b95d	supports Arg1:T95d3fe9419ec3dc7185d63722785ad67 Arg2:T37d985c70b1c086d448c6eb5e8833608
R94bfb0cc81168e150d5a57bb9bdb0003	parts_of_same Arg1:T37d985c70b1c086d448c6eb5e8833608 Arg2:T6200b8b7689f896b2757609cc2e10815
R4cd69306dfa71fed91cb8e4b2d28b116	supports Arg1:T3a6fa6709e91d504e2805f10e93a4ba2 Arg2:T4b3fead47abce62fde8f50c9bddb7876
R50c8e05c31f65c7282824ee62d8de228	parts_of_same Arg1:T4b3fead47abce62fde8f50c9bddb7876 Arg2:T28dd7f93b45547ce73d8a9aa32b06211
Rf0392a1c570aecaf1e1c118eb2859d07	supports Arg1:T42141d87d954e9acd8076a267f59f0f9 Arg2:T26b996839641fa245d957892f4a0bf49
R18f4da5afd911a45c72126db6f3e7186	parts_of_same Arg1:T42141d87d954e9acd8076a267f59f0f9 Arg2:T4b2e121256a9b7d0be1e6a65c88d8a49
R02140cc4ab6d3de8ee9a8f3749705cc0	parts_of_same Arg1:T6413ca21ef5255991349d8b168494ebe Arg2:T9481c003f160d0e6b1d54e9ad5902bad
